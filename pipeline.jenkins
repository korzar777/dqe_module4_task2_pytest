pipeline {
    agent any

    stages {
        stage('Checkout Stage') {
            steps {
                checkout scmGit(branches: [[name: 'origin/dev_local']], extensions: [], userRemoteConfigs: [[credentialsId: '5ae0ff0a-fad7-4001-a96a-5a1d91a178de', url: 'https://github.com/korzar777/dqe_module4_task2_pytest.git/']])
            }
        }
        stage('Build') {
            steps {
                echo 'Building..'

                withEnv(["HOME=${env.WORKSPACE}"]) {
                    sh 'python3 -m pip install --upgrade pip'
                    sh 'python3 -m venv venv'
                    sh '. venv/bin/activate'
                    sh 'pip install -r requirements.txt'
                    sh 'rm -r reports/allure-results/*'
                }
            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'

                withEnv(["HOME=${env.WORKSPACE}"]) {
                    sh 'python3 -m pytest -m jobs --alluredir=reports/allure-results'
                    //sh 'python3 -m pytest  --alluredir=reports/allure-results'
                }
            }
            post {
                // If pytest was able to run the tests, even if some of the test
                // failed, show report.
                always {
                    allure([
                            includeProperties: false,
                            jdk: '',
                            properties: [],
                            reportBuildPolicy: 'ALWAYS',
                            report: 'reports/allure-report',
                            results: [[path: 'reports/allure-results']]
                    ])
                }
            }
        }

        stage('Deliver to git') {
            steps {
                echo 'Test passed...Merging current dev results to pre-prod branch.'
                withCredentials([gitUsernamePassword(credentialsId: '5ae0ff0a-fad7-4001-a96a-5a1d91a178de', gitToolName: 'Default')]) {
                    sh 'git diff pre_prod'
                    sh 'git push origin HEAD:pre_prod'
                }
            }
        }
        //stage('Reports') {
         //   steps {
         //       echo 'Generating test report and sending - report will be attached to jenkins whenever ..'
         //       success {
         //               allure([
         //                   includeProperties: false,
         //                   jdk: '',
         //                   properties: [],
         //                   reportBuildPolicy: 'ALWAYS',
         //                   report: 'reports/allure-report',
         //                   results: [[path: 'reports/allure-results']]
         //               ])
         //       }
         //   }
        //}


    }
}