{"name": "Verified that in hr.employees salary is positive for all employees ", "status": "failed", "statusDetails": {"message": "AssertionError: hr.employees has 3 rows with non-positive salary\nassert False", "trace": "querysample = 'TABLE_CHECKS_SQL_SELECT1', tabletouse = 'TRN_TABLE_EMPLOYEES'\nexpvalue = 0\n\n    @pytest.mark.employees\n    @pytest.mark.tc2\n    @pytest.mark.parametrize(\"querysample, tabletouse, expvalue\",\n                             [('TABLE_CHECKS_SQL_SELECT1', 'TRN_TABLE_EMPLOYEES', 0)\n                              ])\n    def test_salary_is_positive_for_all_employees(querysample, tabletouse, expvalue):\n        \"\"\"Salary is positive for all employees in hr.employees as expected\"\"\"\n        allure.dynamic.title(f'Verified that in {db_tables(tabletouse)} '\n                             f'salary is positive for all employees ')\n        test_query = Helpers.evaluate_query(query_samples(querysample), 'employee_id,salary', db_variables('database'),\n                                            db_tables(tabletouse), 'salary <= 0')\n        pd = DbLib().execute_sql(test_query)\n        passed, rownum, rows = Helpers.check_number_of_rows(pd, expvalue)\n        if not passed:\n            LOGGER.error('{} has {} rows with non-positive salary'.format(db_tables(tabletouse), rownum))\n            LOGGER.error('\\r\\nFAILED ROWS:\\r\\n{}\\r\\n'.format(rows))\n>       assert passed, '{} has {} rows with non-positive salary'.format(db_tables(tabletouse), rownum)\nE       AssertionError: hr.employees has 3 rows with non-positive salary\nE       assert False\n\ntest_trn_db_hr_employees.py:47: AssertionError"}, "description": "Salary is positive for all employees in hr.employees as expected", "attachments": [{"name": "log", "source": "0d2a60cd-c5d8-4b32-b2ed-40369d0e4b23-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "querysample", "value": "'TABLE_CHECKS_SQL_SELECT1'"}, {"name": "tabletouse", "value": "'TRN_TABLE_EMPLOYEES'"}, {"name": "expvalue", "value": "0"}], "start": 1680879342840, "stop": 1680879342875, "uuid": "1a7a966c-e057-4428-bf08-023109ef3beb", "historyId": "2c1d46c00f593224fa4e93c440e6a2be", "testCaseId": "d225160446a29d90288b2d0f9dc9379a", "fullName": "tests.test_trn_db_hr_employees#test_salary_is_positive_for_all_employees", "labels": [{"name": "tag", "value": "tc2"}, {"name": "tag", "value": "employees"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_trn_db_hr_employees"}, {"name": "host", "value": "EPBYMINW09DC"}, {"name": "thread", "value": "7504-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_trn_db_hr_employees"}]}